---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.secrets_sa }}
---
# make the jwt token same name as the service_account_name
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.secrets_sa }}
  annotations:
    kubernetes.io/service-account.name: {{ .Values.secrets_sa }}
type: kubernetes.io/service-account-token
---
# give required token review perms to the service account
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault-auth-{{ .Release.Name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vault-secrets-backend
subjects:
  - kind: ServiceAccount
    name: {{ .Values.secrets_sa }}
    namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vault-secrets-backend
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["serviceaccounts", "serviceaccounts/token"]
  verbs: ["create", "update", "delete"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["rolebindings", "clusterrolebindings"]
  verbs: ["create", "update", "delete"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "clusterroles"]
  verbs: ["bind", "escalate", "create", "update", "delete"]
